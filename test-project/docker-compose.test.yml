version: '3.8'

services:
  # Main application test container
  app-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://testuser:testpass@db-test:5432/taskdb_test
      - JWT_SECRET=test-secret-key-for-testing-only
      - PORT=3000
      - NO_INTERNET=true
      - OFFLINE_MODE=true
    depends_on:
      - db-test
    networks:
      - aidev-test-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
      - /app/logs:rw,noexec,nosuid,size=50m
    volumes:
      - ./test-results:/app/test-results:rw
    ports:
      - "3000:3000"
    command: ["npm", "test"]

  # Test database
  db-test:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=taskdb_test
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_HOST_AUTH_METHOD=md5
    networks:
      - aidev-test-network
    tmpfs:
      - /var/lib/postgresql/data:rw,noexec,nosuid
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    ports:
      - "5432:5432"

  # Redis for session management (optional)
  redis-test:
    image: redis:6-alpine
    networks:
      - aidev-test-network
    tmpfs:
      - /data:rw,noexec,nosuid
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    command: ["redis-server", "--appendonly", "no", "--save", ""]

networks:
  aidev-test-network:
    driver: bridge
    internal: true  # No external internet access
    ipam:
      config:
        - subnet: 172.20.0.0/16
